AWSTemplateFormatVersion: "2010-09-09"
Description: Take VPN Server's AMI for Backup when delete this stack

Parameters:
  VPNAMIID:
    Type: String
    Description: AMI ID for VPN Server

Resources:
  BackupLambdaExecRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: Backup
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ec2:CreateImage"
                  - "ec2:DescribeSnapshots"
                  - "ec2:DescribeInstances"
                  - "ec2:DescribeImages"
                  - "ec2:DeregisterImage"
                  - "ec2:DeleteSnapshot"
                  - "ec2:StopInstances"
                Resource:
                  - "*"

  BackupLambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        ZipFile: |
          import boto3
          import json
          import cfnresponse
          import time
          def handler(event, context):
            try:
              if event["RequestType"] == "Delete":
              else:
                cfnresponse.send(event, context, cfnresponse.SUCCESS, responseData)
              return
            except Exception:
              cfnresponse.send(event, context, cfnresponse.FAILED, responseData)
              return
      Runtime: python2.7
      Timeout: 900
      Handler: index.handler
      MemorySize: 128
      Role: !Ref VPNLambdaExecRoleArn

  GetInstanceID:
    Type: Custom::GetInstanceID
    Version: 1.0
    Properties:
      ServiceToken: !GetAtt GetInstanceIDLambda.Arn

  ADDRouteToPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTableId
      InstanceId: !GetAtt GetInstanceID.Id
      DestinationCidrBlock: !Ref VPNTunnelCidr

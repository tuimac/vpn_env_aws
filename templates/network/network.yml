AWSTemplateFormatVersion: 2010-09-09
Description: Create Entire VPN Network

Parameters:
  VPCCidr:
    Type: String
    Default: 10.3.0.0/16

  DNSServerIp:
    Type: String
    Default: 10.3.255.250

  DomainName:
    Type: String
    Default: tuimac.private

  VPNSubnetCidr:
    Type: String
    Default: 10.3.255.240/28

  PrivateSubnetCidr:
    Type: String
    Default: 10.3.0.0/26

  EndpointSubnetCidr:
    Type: String
    Default: 10.3.0.64/26

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCidr
      EnableDnsSupport: true

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: vpn

  IGWAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  DHCPOptionSet:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName: !Ref DomainName
      DomainNameServers:
        - !Ref DNSServerIp
      NtpServers:
        - 169.254.169.123
      Tags:
        - Key: Name
          Value: vpn

  DHCPOptionSetAttachment:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId: !Ref VPC
      DhcpOptionsId: !Ref DHCPOptionSet

  VPNSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref VPNSubnetCidr
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: vpn

  PrivateSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref PrivateSubnetCidr
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: private

  EndpointSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: !Ref EndpointSubnetCidr
      AvailabilityZone: ap-northeast-1a
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: endpoint

  VPNRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: vpn

  VPNRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref VPNRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  VPNRouteTableAccociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref VPNRouteTable
      SubnetId: !Ref VPNSubnet

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: private

  PrivateRouteTableAccociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet

  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      PolicyDocument: '{
        "Version": "2012-10-17",
        "Statement":[{
          "Effect": "Allow",
          "Principal": "*",
          "Action": "*",
          "Resource": "*"
        }]
      }'
      RouteTableIds:
        - !Ref PrivateRouteTable
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      VpcId: !Ref VPC

Outputs:
  VPCId:
    Value: !Ref VPC

  VPNSubnetId:
    Value: !Ref VPNSubnet

  PrivateSubnetId:
    Value: !Ref PrivateSubnet

  EndpointSubnetId:
    Value: !Ref EndpointSubnet
    Export:
      Name: EndpointSubnetId

  PrivateRouteTableId:
    Value: !Ref PrivateRouteTable

  PrivateSubnetCidr:
    Value: !Ref PrivateSubnetCidr

  VPNServerIp:
    Value: !Ref DNSServerIp
